directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""Create a new ResourceProvider."""
input CreateResourceProviderInput {
	"""The name of the resource provider."""
	name: String!
	"""The description of the resource provider."""
	description: String
	"""The ID for the organizational unit for this resource provider."""
	organizationalUnitID: ID!
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
"""A valid JSON string."""
scalar JSON
type Mutation {
	"""Create a resource provider."""
	resourceProviderCreate(input: CreateResourceProviderInput!): ResourceProviderCreatePayload!
	"""Update a resource provider."""
	resourceProviderUpdate(id: ID!, input: UpdateResourceProviderInput!): ResourceProviderUpdatePayload!
	"""Delete a resource provider."""
	resourceProviderDelete(id: ID!): ResourceProviderDeletePayload!
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node {
	"""The id of the object."""
	id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
	"""Specifies an ascending order for a given `orderBy` argument."""
	ASC
	"""Specifies a descending order for a given `orderBy` argument."""
	DESC
}
type OrganizationalUnit @key(fields: "id") {
	id: ID! @external
	resourceProvider(
		"""Returns the elements in the list that come after the specified cursor."""
		after: Cursor

		"""Returns the first _n_ elements from the list."""
		first: Int

		"""Returns the elements in the list that come before the specified cursor."""
		before: Cursor

		"""Returns the last _n_ elements from the list."""
		last: Int

		"""Ordering options for ResourceProvider returned from the connection."""
		orderBy: ResourceProviderOrder

		"""Filtering options for ResourceProvider returned from the connection."""
		where: ResourceProviderWhereInput
	): ResourceProviderConnection! @goField(forceResolver: true)
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo @shareable {
	"""When paginating forwards, are there more items?"""
	hasNextPage: Boolean!
	"""When paginating backwards, are there more items?"""
	hasPreviousPage: Boolean!
	"""When paginating backwards, the cursor to continue."""
	startCursor: Cursor
	"""When paginating forwards, the cursor to continue."""
	endCursor: Cursor
}
type Query {
	"""Lookup a resource provider by ID."""
	resourceProvider(
		"""The resource provider ID."""
		id: ID!
	): ResourceProvider!
	_entities(representations: [_Any!]!): [_Entity]!
	_service: _Service!
}
type ResourceProvider implements Node @key(fields: "id") {
	"""The ID of the resource provider."""
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	"""The name of the resource provider."""
	name: String!
	"""The description of the resource provider."""
	description: String
	"""The organizationalUnit of the resourceProvider."""
	organizationalUnit: OrganizationalUnit! @goField(forceResolver: true)
}
"""A connection to a list of items."""
type ResourceProviderConnection {
	"""A list of edges."""
	edges: [ResourceProviderEdge]
	"""Information to aid in pagination."""
	pageInfo: PageInfo!
	"""Identifies the total count of items in the connection."""
	totalCount: Int!
}
"""Return response from resourceProviderCreate"""
type ResourceProviderCreatePayload {
	"""The created resource provider."""
	resourceProvider: ResourceProvider!
}
"""Return response from resourceProviderDelete"""
type ResourceProviderDeletePayload {
	"""The ID of the deleted resource provider."""
	deletedID: ID!
}
"""An edge in a connection."""
type ResourceProviderEdge {
	"""The item at the end of the edge."""
	node: ResourceProvider
	"""A cursor for use in pagination."""
	cursor: Cursor!
}
"""Ordering options for ResourceProvider connections"""
input ResourceProviderOrder {
	"""The ordering direction."""
	direction: OrderDirection! = ASC
	"""The field by which to order ResourceProviders."""
	field: ResourceProviderOrderField!
}
"""Properties by which ResourceProvider connections can be ordered."""
enum ResourceProviderOrderField {
	ID
	CREATED_AT
	UPDATED_AT
	NAME
	DESCRIPTION
}
"""Return response from resourceProviderUpdate"""
type ResourceProviderUpdatePayload {
	"""The updated resource provider."""
	resourceProvider: ResourceProvider!
}
"""
ResourceProviderWhereInput is used for filtering ResourceProvider objects.
Input was generated by ent.
"""
input ResourceProviderWhereInput {
	not: ResourceProviderWhereInput
	and: [ResourceProviderWhereInput!]
	or: [ResourceProviderWhereInput!]
	"""id field predicates"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	"""created_at field predicates"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	"""updated_at field predicates"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	"""name field predicates"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""description field predicates"""
	description: String
	descriptionNEQ: String
	descriptionIn: [String!]
	descriptionNotIn: [String!]
	descriptionGT: String
	descriptionGTE: String
	descriptionLT: String
	descriptionLTE: String
	descriptionContains: String
	descriptionHasPrefix: String
	descriptionHasSuffix: String
	descriptionIsNil: Boolean
	descriptionNotNil: Boolean
	descriptionEqualFold: String
	descriptionContainsFold: String
}
"""The builtin Time type"""
scalar Time
"""Update an existing ResourceProvider."""
input UpdateResourceProviderInput {
	"""The name of the resource provider."""
	name: String
	"""The description of the resource provider."""
	description: String
	clearDescription: Boolean
}
union _Entity = OrganizationalUnit | ResourceProvider
type _Service {
	sdl: String
}
scalar _Any
scalar FieldSet
directive @requires(fields: FieldSet!) on FIELD_DEFINITION
directive @provides(fields: FieldSet!) on FIELD_DEFINITION
directive @extends on OBJECT | INTERFACE
directive @key(fields: FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE
directive @link(import: [String!], url: String!) repeatable on SCHEMA
directive @external on FIELD_DEFINITION | OBJECT
directive @shareable on OBJECT | FIELD_DEFINITION
directive @tag(name: String!) repeatable on FIELD_DEFINITION | INTERFACE | OBJECT | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
directive @override(from: String!) on FIELD_DEFINITION
directive @inaccessible on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
#directive @interfaceObject on OBJECT
extend schema
  @link(
	url: "https://specs.apollo.dev/federation/v2.3"
	import: [
	  "@key",
	  "@external",
	  "@shareable",
	  "@tag",
	  "@override",
	  "@inaccessible",
	  "@interfaceObject"
	  ]
  )
